**Git**

Funciona **no seu computador** para **rastrear as mudan√ßas** que voc√™ faz nos prompts.

**GitHub** 

Funciona **online** para **compartilhar o reposit√≥rio da Biblioteca Lend√°ria** com o time.

**Reposit√≥rio (Repo)**

Um reposit√≥rio √© onde todos os prompts ser√£o armazenados, organizados em pastas. Ele mant√©m o hist√≥rico de mudan√ßas e permite que v√°rias pessoas trabalhem de forma coletiva.

**Exemplo:**

O reposit√≥rio **Biblioteca Lend√°ria** cont√©m todos os prompts organizados por √°rea.

**Branch**

Uma branch √© uma ‚Äúc√≥pia‚Äù do reposit√≥rio onde voc√™ pode fazer altera√ß√µes sem afetar a branch principal (main). Depois de finalizar as altera√ß√µes, voc√™ pode mesclar a branch de volta na principal.

**Exemplo:**

Criar a branch marketing/email-nutricao-lancamento_formacao para trabalhar em um novo prompt para cria√ß√£o de emails.

**Commit**

Um commit √© feito para "criar‚Äù ou "salvar‚Äù mudan√ßas feitas em um arquivo. Ele inclui uma mensagem que explica o que foi criado ou alterado.

**Exemplo:**

feat: Adicionando prompt de nutri√ß√£o por email

**Pull Request (PR)**

Um Pull Request √© uma solicita√ß√£o para que suas altera√ß√µes sejam revisadas e aprovadas antes de serem integradas na branch principal (main).

**Exemplo:**

Abrir um PR para que algu√©m do time revise o novo prompt antes de integr√°-lo ao reposit√≥rio.

**Merge (n√£o se preocupe com isso)**

O merge √© o processo de unir as altera√ß√µes feitas em uma branch secund√°ria (por exemplo, marketing/nutricao-v1) na branch principal (main).

**Clone**

O clone √© uma c√≥pia do reposit√≥rio GitHub que voc√™ baixa para o seu computador. Isso permite que voc√™ trabalhe localmente nos arquivos.

**Comando:**

git clone https://github.com/Academia-Lendaria/Biblioteca-Lendaria.git

**Push**

O push √© o comando que voc√™ usa para enviar as mudan√ßas feitas no seu ambiente local para o reposit√≥rio no GitHub.

**Comando:**

git push origin nome-da-branch

**Pull**

O pull √© o comando que voc√™ usa para **atualizar seu reposit√≥rio local** com as mudan√ßas mais recentes feitas no GitHub.

**Comando:**

git pull

### **üß© Boas Pr√°ticas de Versionamento**

**Hist√≥rico de Vers√µes**

Mantenha um hist√≥rico claro das altera√ß√µes feitas em cada arquivo, usando o padr√£o:

‚Ä¢	**v1:** Primeira vers√£o do prompt.

‚Ä¢	**v1.1, v1.1.1 e etc :** Pequenos ajustes ou melhorias.

‚Ä¢	**v2:** Mudan√ßas grandes na estrutura do prompt.

**Exemplo:**

# Hist√≥rico de Vers√µes

- v1 (01-01-2025): Cria√ß√£o do prompt.
- v1.1 (05-01-2025): Ajuste no tom de comunica√ß√£o.
- v2 (05-02-2025): Inclus√£o de uma chamada para ferramenta.

**Mensagens de Commit**

Use mensagens claras e descritivas nos commits.

**üîÑ Comandos B√°sicos do Git**

| **Comando** | **Descri√ß√£o** |
| --- | --- |
| git clone | Clona o reposit√≥rio para o seu computador. |
| git add . | Adiciona todas as mudan√ßas para commit. |
| git commit -m "msg" | Cria um commit com a mensagem especificada. |
| git push | Envia as mudan√ßas para o GitHub. |
| git pull | Puxa as mudan√ßas mais recentes do GitHub. |
